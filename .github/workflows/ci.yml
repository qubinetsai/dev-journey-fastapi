name: CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - '*'

permissions:
  contents: write
  packages: write
  pages: write
  id-token: write

jobs:
  build_docker_image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      DOCKER_DRIVER: overlay2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show Docker info
        run: docker info

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get build name
        id: get_build_name
        run: |
          BUILD_NAME=$(git describe --tags || echo ${{ github.run_number }})
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "Build name: $BUILD_NAME"

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ env.BUILD_NAME }} \
                        -t ghcr.io/${{ github.repository }}:latest \
                        --build-arg BUILDKIT_INLINE_CACHE=1 \
                        --cache-from ghcr.io/${{ github.repository }} .
          docker push ghcr.io/${{ github.repository }} --all-tags

  build_helm_chart:
    name: Build Helm Chart
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "admin@qubinets.com"

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.12.0
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Helm version
        run: helm version

      - name: Add Helm repos
        run: |
          helm repo add stable https://charts.helm.sh/stable
          helm repo update

      - name: Install chart-releaser
        run: |
          wget https://github.com/helm/chart-releaser/releases/download/v1.5.0/chart-releaser_1.5.0_linux_amd64.tar.gz
          tar xzf chart-releaser_1.5.0_linux_amd64.tar.gz
          sudo mv cr /usr/local/bin/cr

      - name: Get build name
        run: |
          BUILD_NAME=$(git describe --tags || echo ${{ github.run_number }})
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "Build name: $BUILD_NAME"

      - name: Package and Release Charts
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          # Create temporary directories
          mkdir -p .cr-release-packages
          mkdir -p .cr-index
          
          # Package chart
          helm package charts/dev-journey-fastapi --destination .cr-release-packages/
          
          # Upload chart
          cr upload --owner ${{ github.repository_owner }} --git-repo ${{ github.event.repository.name }} --package-path .cr-release-packages
          
          # Update index
          cr index --owner ${{ github.repository_owner }} --git-repo ${{ github.event.repository.name }} --pages-branch gh-pages --push

      #- name: Run Chart Releaser
      #  uses: helm/chart-releaser-action@v1.5.0
      #  env:
      #    CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #  with:
      #    version: ${{ env.BUILD_NAME }}
      #    charts_dir: charts